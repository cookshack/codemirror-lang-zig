# empty

fn fun() noreturn {
  switch (a) { }
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier)),
             Block(Statement(SwitchExpr(switch,
                                        Expr(TypeExpr(Identifier)))))))

# prong

fn fun() noreturn {
  switch (a) {
  1 => one()
  }
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier)),
             Block(Statement(SwitchExpr(switch,
                                        Expr(TypeExpr(Identifier))
                                        SwitchProng(SwitchCase(SwitchItem(Expr(TypeExpr(Integer)))),
                                                    Expr(TypeExpr(Identifier,
                                                                  FnCallArgs))))))))

# else

fn fun() noreturn {
  switch (a) {
  else => one()
  }
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier)),
             Block(Statement(SwitchExpr(switch,
                                        Expr(TypeExpr(Identifier))
                                        SwitchProng(SwitchCase(else),
                                                    Expr(TypeExpr(Identifier,
                                                                  FnCallArgs))))))))

# expr

const a = switch (tag) {
  .linux => 1,
  else => 2
};

==>
Program(Decl(VarDecl(const,
                     Name,
                     Expr(TypeExpr(SwitchExpr(switch,
                                              Expr(TypeExpr(Identifier)),
                                              SwitchProng(SwitchCase(SwitchItem(Expr(TypeExpr(Identifier)))),
                                                          Expr(TypeExpr(Integer))),
                                              SwitchProng(SwitchCase(else),
                                                          Expr(TypeExpr(Integer)))))))))

# inline

fn f1() noreturn {
  switch (a) {
  inline 0, 1 => |i| f2(i)
  }
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier)),
             Block(Statement(SwitchExpr(switch,
                                        Expr(TypeExpr(Identifier)),
                                        SwitchProng(inline,
                                                    SwitchCase(SwitchItem(Expr(TypeExpr(Integer))),
                                                               SwitchItem(Expr(TypeExpr(Integer)))),
                                                    PtrIndexPayload(Identifier),
                                                    Expr(TypeExpr(Identifier,
                                                                  FnCallArgs(Expr(TypeExpr(Identifier)))))))))))
