# One fn proto

fn one() u32;

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier))))

# One fn proto w arg

fn one(a : u32) u32;

==>
Program(Decl(FnProto(Identifier,ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))), TypeExpr(Identifier))))

# Two fn protos

fn one(a : u32, b: string) noreturn;
fn two(a : u32, b: string) u32;

==>
Program(Decl(FnProto(Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier))),
                                   ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier))),
        Decl(FnProto(Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier))),
                                   ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier))))

# Two fns

fn one(a : u32, b: string) noreturn { }
fn two(a : u32, b: string) noreturn { }

==>
Program(Decl(FnProto(Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier))),
                                   ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block),
        Decl(FnProto(Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier))),
                                   ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block))

# Pub

pub fn main() u32;

==>
Program(Pub,
        Decl(FnProto(Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier))))

# Err union ret

fn fun() !u32;

==>
Program(Decl(FnProto(Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier))))

# Type proto

const a : fn () u32 = f;

==>
Program(Decl(VarDecl(Const,
                     Name,
                     TypeExpr(FnProto(ParamDeclList,
                                      TypeExpr(Identifier))),
                     Expr(PrimaryExpr(TypeExpr(Identifier))))))
