# init

const p = Point{
    .x = 0.1,
};

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name),
                           Expr(TypeExpr(Identifier),
                                InitList(FieldInit(Identifier,
                                                   Expr(TypeExpr(Float))))))))

# dot

const a: Point = .{
  .x = 5,
};

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name,
                                        TypeExpr(Identifier)),
                           Expr(TypeExpr(InitList(FieldInit(Identifier,
                                                            Expr(TypeExpr(Integer)))))))))

# dangle

// both for...| and Point are curlySuffixExpr which ends in an optional InitList
const p = for (a) |x| Point {};

==>
Program(LineComment,
        Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name),
                           Expr(LoopExpr(ForExpr(ForPrefix(for,
                                                           ForArgList(ForItem(Expr(TypeExpr(Identifier)))),
                                                           PtrListPayload(Identifier)),
                                                 Expr(TypeExpr(Identifier),
                                                      InitList)))))))

# decl

const Point = packed struct (u32) {
  //! container doc comment

  // comment
  x: u16,
  /// y doc comment
  y: u16 align(16) = 3
};

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name),
                           Expr(TypeExpr(ContainerDecl(packed,
                                                       ContainerDeclAuto(ContainerDeclType(struct,
                                                                                           Expr(TypeExpr(Identifier))),
                                                                         ContainerDocComment,
                                                                         LineComment,
                                                                         ContainerField(Identifier,
                                                                                        TypeExpr(Identifier)),
                                                                         ContainerField(DocComment,
                                                                                        Identifier,
                                                                                        TypeExpr(Identifier),
                                                                                        ByteAlign(align,
                                                                                                  Expr(TypeExpr(Integer))),
                                                                                        Expr(TypeExpr(Integer))))))))))

# const in struct

fn Point(comptime T: type) type {
  return struct {
    const Self = @This();
    x: T,
  };
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList(ParamDecl(comptime,
                                             Identifier,
                                             ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block(Statement(Expr(return,
                                  Expr(TypeExpr(ContainerDecl(ContainerDeclAuto(ContainerDeclType(struct),
                                                                                Decl(GlobalVarDecl(VarDeclProto(const,
                                                                                                                Name),
                                                                                                   Expr(TypeExpr(BuiltinIdentifier,
                                                                                                                 FnCallArgs)))),
                                                                                ContainerField(Identifier,
                                                                                               TypeExpr(Identifier)))))))))))

# field with @

const a = vec.@"0";

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name),
                           Expr(TypeExpr(Identifier,
                                         SuffixOp(FieldAccess(Identifier)))))))
