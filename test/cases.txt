# Empty doc

==>
Program()

# Block statement

fn one() noreturn {
  return;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList(),TypeExpr(Identifier)),
             Block(Statement(Return))))

# Assign in block

fn one() noreturn {
  a = 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(TypeExpr(Identifier),
                             AssignOp,
                             Expr(PrimaryExpr(TypeExpr(Integer)))))))

# import

const std = @import("std");

==>
Program
(Decl
 (VarDecl
  (const,
   Name,
   Expr(PrimaryExpr(TypeExpr(BuiltinIdentifier,
                             FnCallArgs(Expr(PrimaryExpr(TypeExpr(StringLiteral))))))))))

# unreachable

fn fun() noreturn {
  if (0)
    unreachable;
}

==>
Program(Decl(FnProto(Identifier,
                     ParamDeclList,
                     TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(If,
                                                  Expr(PrimaryExpr(TypeExpr(Integer)))),
                                         Expr(PrimaryExpr(TypeExpr(Unreachable))))))))
