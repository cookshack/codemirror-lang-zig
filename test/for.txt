# For

fn main() noreturn {
  for (s) |ch|
    fun(ch);
}

==>
Program
(Decl
 (FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
  Block(Statement(ForStatement(ForPrefix(For,
                                         ForArgList(ForItem(Expr(PrimaryExpr(TypeExpr(Identifier))))),
                                         PtrListPayload(Identifier)),
                               Expr(PrimaryExpr(TypeExpr(Identifier,
                                                         FnCallArgs(Expr(PrimaryExpr(TypeExpr(Identifier))))))))))))

# For block

fn one() u8 {
  for (s, 0..3) |ch, index| {
    return 1;
  }
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(ForStatement(ForPrefix(For,
                                                    ForArgList(ForItem(Expr(PrimaryExpr(TypeExpr(Identifier)))),
                                                               ForItem(Expr(PrimaryExpr(TypeExpr(Integer))),
                                                                       Expr(PrimaryExpr(TypeExpr(Integer))))),
                                                    PtrListPayload(Identifier, Identifier)),
                                          Block(Statement(Return, Expr(PrimaryExpr(TypeExpr(Integer))))))))))

# For with assign

fn main() noreturn {
  for (s, 0..) |ch|
    a = ch;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(ForStatement(ForPrefix(For,
                                                    ForArgList(ForItem(Expr(PrimaryExpr(TypeExpr(Identifier)))),
                                                               ForItem(Expr(PrimaryExpr(TypeExpr(Integer))))),
                                                    PtrListPayload(Identifier)),
                                          AssignExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                     AssignOp,
                                                     Expr(PrimaryExpr(TypeExpr(Identifier)))))))))
