# expr

fn one() u8 {
  while (a < 1)
    return 1;
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(LoopStatement(WhileStatement(WhilePrefix(while,
                                                                      Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                                      CompareOp,
                                                                                      Expr(TypeExpr(Integer))))),
                                                          AssignExpr(Expr(return,
                                                                          Expr(TypeExpr(Integer))))))))))

# block

fn one() u8 {
  while (a < 1) {
    return 1;
  }
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(LoopStatement(WhileStatement(WhilePrefix(while, Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                                             CompareOp,
                                                                                             Expr(TypeExpr(Integer))))),
                                                          Block(Statement(Expr(return, Expr(TypeExpr(Integer)))))))))))

# with assign

fn main() noreturn {
  while (a)
    a -= 1;
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(LoopStatement(WhileStatement(WhilePrefix(while,
                                                                      Expr(TypeExpr(Identifier))),
                                                          AssignExpr(Expr(TypeExpr(Identifier)),
                                                                     AssignOp,
                                                                     Expr(TypeExpr(Integer)))))))))

# continue

fn main() noreturn {
  while (a) : (incr())
    fun();
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(LoopStatement(WhileStatement(WhilePrefix(while,
                                                                      Expr(TypeExpr(Identifier)),
                                                                      WhileContinueExpr(AssignExpr(Expr(TypeExpr(Identifier,
                                                                                                                 FnCallArgs))))),
                                                          AssignExpr(Expr(TypeExpr(Identifier,
                                                                                   FnCallArgs)))))))))

# continue assign

fn main() noreturn {
  while (a) : (a = a - 1)
    fun();
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(LoopStatement(WhileStatement(WhilePrefix(while,
                                                                      Expr(TypeExpr(Identifier)),
                                                                      WhileContinueExpr(AssignExpr(Expr(TypeExpr(Identifier)),
                                                                                                   AssignOp,
                                                                                                   Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                                                                   AdditionOp,
                                                                                                                   Expr(TypeExpr(Integer))))))),
                                                          AssignExpr(Expr(TypeExpr(Identifier,
                                                                                   FnCallArgs)))))))))
