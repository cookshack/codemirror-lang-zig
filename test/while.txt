# While

fn one() u8 {
  while (a < 1)
    return 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(WhileStatement(WhilePrefix(While, Expr(BinaryExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                               CompareOp,
                                                                               Expr(PrimaryExpr(TypeExpr(Integer)))))),
                                            Expr(PrimaryExpr(Return, Expr(PrimaryExpr(TypeExpr(Integer))))))))))

# While block

fn one() u8 {
  while (a < 1) {
    return 1;
  }
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(WhileStatement(WhilePrefix(While, Expr(BinaryExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                               CompareOp,
                                                                               Expr(PrimaryExpr(TypeExpr(Integer)))))),
                                            Block(Statement(Return, Expr(PrimaryExpr(TypeExpr(Integer))))))))))

# While with assign

fn main() noreturn {
  while (a)
    a -= 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(WhileStatement(WhilePrefix(While, Expr(PrimaryExpr(TypeExpr(Identifier)))),
                                                        AssignExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                   AssignOp,
                                                                   Expr(PrimaryExpr(TypeExpr(Integer)))))))))

# Continue

fn main() noreturn {
  while (a) : (incr())
    fun();
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(WhileStatement(WhilePrefix(While,
                                                        Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                        WhileContinueExpr(Expr(PrimaryExpr(TypeExpr(Identifier,
                                                                                                    FnCallArgs))))),
                                            Expr(PrimaryExpr(TypeExpr(Identifier,
                                                                      FnCallArgs))))))))

# Continue assign

fn main() noreturn {
  while (a) : (a = a - 1)
    fun();
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(WhileStatement(WhilePrefix(While,
                                                        Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                        WhileContinueExpr(AssignExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                                     AssignOp,
                                                                                     Expr(BinaryExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                                                     AdditionOp,
                                                                                                     Expr(PrimaryExpr(TypeExpr(Integer)))))))),
                                            Expr(PrimaryExpr(TypeExpr(Identifier,
                                                                      FnCallArgs))))))))
