# stmnt

fn one(a : u32) u16 {
  if (a == 1)
    return 1;
}

==>
Program(Decl(FnProto(Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(If, Expr(BinaryExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                                      CompareOp,
                                                                      Expr(PrimaryExpr(TypeExpr(Integer)))))),
                                         Expr(PrimaryExpr(Return, Expr(PrimaryExpr(TypeExpr(Integer))))))))))

# expr

fn main() u8 {
  return if (1 == 0) 3 else 4;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(Return, Expr(PrimaryExpr(IfExpr(IfPrefix(If, Expr(BinaryExpr(Expr(PrimaryExpr(TypeExpr(Integer))),
                                                                                          CompareOp,
                                                                                          Expr(PrimaryExpr(TypeExpr(Integer)))))),
                                                             Expr(PrimaryExpr(TypeExpr(Integer))),
                                                             Else,
                                                             Expr(PrimaryExpr(TypeExpr(Integer))))))))))

# stmnt with assign in then expr

fn main() noreturn {
  if (1)
    a = 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(If, Expr(PrimaryExpr(TypeExpr(Integer)))),
                                         AssignExpr(Expr(PrimaryExpr(TypeExpr(Identifier))),
                                                    AssignOp,
                                                    Expr(PrimaryExpr(TypeExpr(Integer)))))))))

# type expr

const a : if (b) u32 else u16;

==>
Program(Decl(VarDecl(Const,
                     Name,
                     TypeExpr(IfTypeExpr(IfPrefix(If,
                                                  Expr(PrimaryExpr(TypeExpr(Identifier)))),
                                         TypeExpr(Identifier),
                                         Else,
                                         TypeExpr(Identifier))))))
