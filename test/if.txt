# If stmnt

fn one(a : u32) {
  if (a == 1)
    return 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(PrimaryTypeExpr(Identifier)))))),
             Block(Statement(IfStatement(IfPrefix(If, Expr(BinaryExpr(Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Identifier))))),
                                                                      CompareOp,
                                                                      Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer)))))))),
                                         Expr(PrimaryExpr(Return, Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer))))))))))))

# If expr

fn main() {
  return if (1 == 0) 3 else 4;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList),
             Block(Statement(Return, Expr(PrimaryExpr(IfExpr(IfPrefix(If, Expr(BinaryExpr(Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer))))),
                                                                                          CompareOp,
                                                                                          Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer)))))))),
                                                             Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer))))),
                                                             Else,
                                                             Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer))))))))))))

# If stmnt with assign in then expr

fn main() {
  if (1)
    a = 1;
}

==>
Program(Decl(FnProto(Identifier,ParamDeclList),
             Block(Statement(IfStatement(IfPrefix(If, Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer)))))),
                                         AssignExpr(Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Identifier))))),
                                                    AssignOp,
                                                    Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(PrimaryTypeExpr(Integer)))))))))))
