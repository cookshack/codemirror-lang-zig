# then expr

fn one(a : u32) u16 {
  if (a == 1)
    return 1;
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(if,
                                                  Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                  CompareOp,
                                                                  Expr(TypeExpr(Integer))))),
                                         AssignExpr(Expr(return,
                                                         Expr(TypeExpr(Integer)))))))))

# then statement

fn one(a : u32) u16 {
  if (a == 1) {
    return 1;
  }
}

==>
Program(Decl(FnProto(fn,
                     Identifier,
                     ParamDeclList(ParamDecl(Identifier, ParamType(TypeExpr(Identifier)))),
                     TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(if, Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                      CompareOp,
                                                                      Expr(TypeExpr(Integer))))),
                                         Block(Statement(Expr(return,
                                                              Expr(TypeExpr(Integer))))))))))

# in expr

fn main() u8 {
  return if (1 == 0) 3 else 4;
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(Expr(return,
                                  Expr(IfExpr(IfPrefix(if,
                                                       Expr(BinaryExpr(Expr(TypeExpr(Integer)),
                                                                       CompareOp,
                                                                       Expr(TypeExpr(Integer))))),
                                              Expr(TypeExpr(Integer)),
                                              else,
                                              Expr(TypeExpr(Integer)))))))))

# stmnt with assign in then expr

fn main() noreturn {
  if (1)
    a = 1;
}

==>
Program(Decl(FnProto(fn,Identifier,ParamDeclList,TypeExpr(Identifier)),
             Block(Statement(IfStatement(IfPrefix(if, Expr(TypeExpr(Integer))),
                                         AssignExpr(Expr(TypeExpr(Identifier)),
                                                    AssignOp,
                                                    Expr(TypeExpr(Integer))))))))

# type expr

const a : if (b) u32 else u16;

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name,
                                        TypeExpr(IfTypeExpr(IfPrefix(if,
                                                                     Expr(TypeExpr(Identifier))),
                                                            TypeExpr(Identifier),
                                                            else,
                                                            TypeExpr(Identifier)))))))

# in expr with binary op

const c2 = if (c1 < 10) c1 + 7 else 99;

==>
Program(Decl(GlobalVarDecl(VarDeclProto(const,
                                        Name),
                           Expr(IfExpr(IfPrefix(if,
                                                Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                                CompareOp,
                                                                Expr(TypeExpr(Integer))))),
                                       Expr(BinaryExpr(Expr(TypeExpr(Identifier)),
                                                       AdditionOp,
                                                       Expr(TypeExpr(Integer)))),
                                       else,
                                       Expr(TypeExpr(Integer)))))))
