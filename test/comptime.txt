# Decl

var a : u8;
comptime { a = 1; }

==>
Program(Decl(VarDecl(Var,Name,TypeExpr(Identifier))),
        ComptimeDecl(Comptime,
                     Block(Statement(CurlySuffixExpr(TypeExpr(Identifier)),
                                     AssignOp,
                                     Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(Integer))))))))

# Valid

test "comptime" {
  const f3 = comptime blk: {
    break :blk fib(3);
  };
  //try std.testing.expect(f3 > 0);
}

==>
Program
(TestDecl
 (Test,
  TestName,
  Block(Statement(VarDecl(Const,
                          Name,
                          Expr
                          (PrimaryExpr (Comptime,
                                        Expr
                                        (PrimaryExpr
                                         (CurlySuffixExpr
                                          (TypeExpr
                                           (LabeledTypeExpr(BlockLabel(Identifier),
                                                            Block(Statement(Break,
                                                                            BreakLabel(Identifier),
                                                                            Expr(PrimaryExpr(CurlySuffixExpr(TypeExpr(Identifier,
                                                                                                                      FnCallArgs
                                                                                                                      (Expr
                                                                                                                       (PrimaryExpr
                                                                                                                        (CurlySuffixExpr
                                                                                                                         (TypeExpr
                                                                                                                          (Integer)))))))))))))))))))),
        LineComment)))
